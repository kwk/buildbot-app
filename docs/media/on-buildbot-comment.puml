@startuml on-buildbot-comment
!theme cerulean
' good themes: vibrant, toy, cerulean, bluegray, lightgray, materia, plain

' For on-the-fly rendering of the latest version of this diagram, please visit:
' http://www.plantuml.com/plantuml/proxy?idx=0&src=https://raw.githubusercontent.com/kwk/buildbot-app/main/docs/media/on-buildbot-comment.puml&fmt=svg
'
' To generate a PNG diagram from this file follow these steps:
' $ wget -o plantuml.jar http://sourceforge.net/projects/plantuml/files/plantuml.jar/download
' $ java -jar plantuml.jar -verbose on-buildbot-comment.puml

' Give calls and returns a number for easier referencing
autonumber "<B>00."

title
    Sequence diagram for executing builds on Buildbot
    initiated by a /buildbot comment in Github Pull Request
end title

' When you comment this out, you'll get the participants and actors repeated at
' the bottom which is nice for a big diagram
' skinparam style strictuml

' skinparam monochrome false
' skinparam SequenceBoxBackgroundColor #efefef
' skinparam SequenceBoxBorderColor #aeaeae
' skinparam roundcorner 20
skinparam SequenceGroupBackgroundColor #718fbf
skinparam SequenceGroupHeaderFontColor #ffffff
skinparam SequenceGroupBodyBackgroundColor #9dc1fc90
' ' Style participants
' skinparam ParticipantBackgroundColor #efefef
' skinparam ParticipantBorderColor #efefef
' skinparam defaultFontName Red Hat Display Regular

actor "Alice" as alice

box "Github.com"
    participant "<img github-logo/github-mark.png{scale=0.3}>\nGithub.com\nWebsite" as gh
    participant "<img github-logo/github-mark.png{scale=0.3}>\nGithub.com\nAPI" as ghapi
end box

box "Public\nHTTP endpoint\n(e.g. ngrok)"
    queue "HTTP\nForwarder" as forwarder
end box

box "Localhost developer machine"
    participant "<img logo/logo-round-smaller.png{scale=1}>\nBuildbot\nApp" as app
    participant "<img buildbot-logo/buildbot.png{scale=0.3}>\nBuildbot\nMaster" as master
    participant "<img windows-logo/windows.png{scale=0.1}>\nBuildbot\nWorker1" as worker1
    participant "<img tux-logo/tux.svg{scale=0.4}>\nBuildbot\nWorker2" as worker2
    participant "<img apple-logo/apple.png{scale=0.1}>\nBuildbot\nWorker3" as worker3
end box

' app -> forwarder : Register to receive events\n(only needed during\ndevelopment stage)
alice -> gh : Create PR comment:\n""/buildbot""
note left : <u>NOTE:</u> The semantics are not defined so\nI just picked a simple string\nto kick off the pipeline.
ghapi -> forwarder : [[https://docs.github.com/en/webhooks-and-events/webhooks/webhook-events-and-payloads#issue_comment Send issue_comment Webhook]]
forwarder -> app : forward this\ninbound\nrequest\n(and the\nones below,\nif any)
activate app
        app -> app : Comment body\nmatches pattern?
        
        group Feedback to Github User: "We've received your message and begin processing shortly"
            app -> ghapi : [[https://docs.github.com/en/rest/issues/comments#create-an-issue-comment Create PR comment]]\nto indicate responsiveness
            note left: <u>NOTE:</u> We call this comment the <b>build log comment</b>.\nWe'll be using it to store state updates to the build.
            activate ghapi
                return HTTP 201 OK
            gh -> alice : Display build log comment
        end

        group Feedback to Github User: "A check was created for you"
            app -> ghapi : [[https://docs.github.com/en/rest/checks/runs#create-a-check-run Create check run]]\nin neutral state
            activate ghapi
                return HTTP 201 OK
            gh -> alice : Show check run on PR page\nunder the Buildbot App\n<i>check suite</i>
        end

        app -> master : ""buildbot try""\nCLI command
        note left : <u>NOTE:</u> We send properties to buildbot (e.g. CheckRunID, PullRequestID, etc.) that it sends back to the app\nlater with the HTTPStatusPush service. From these properties we can deduce which check we have to update.
        activate master
            note right : <u>NOTE:</u> try-scheduler picks up buildrequest\n(executes delegation builder)\nand <i>triggers a builder</i> to execute build\non a worker. 
        app --> forwarder : HTTP 20X
    forwarder --> ghapi : HTTP 20X ()
deactivate app
        
activate master
    
    group Feedback to Github User: "A build has started" (First time the URL to buildbot is provided)
        master -> app : HttpStatusPush with updated status\ninformation about the build
        note left : <u>NOTE:</u> This is a buildbot service\nto update interested parties about\nupdates to builds.
        activate app
            app -> ghapi : Update check run and:\n* add build state to existing summary\n*adjust run state according to build result
            activate ghapi
                return HTTP 20X
            
        gh -> alice : Show updated check suite\n"Starting..."

        group Also update the build log comment
            app -> ghapi : [[https://docs.github.com/en/rest/issues/comments#update-an-issue-comment Update build log comment]]
            activate ghapi
                return HTTP 20X OK
            gh -> alice : Refresh build log comment
        end
        return HTTP 20X
    end
    
    master -> worker2 : execute build on\nchosen worker

    activate worker2
        ...Some time later...
        return "build failed"
    
    group Feedback to Github User: "Build finished"
        master -> app : HttpStatusPush with updated status\ninformation about the build
        activate app
            app -> ghapi : Update check run and:\n* add build state to existing summary\n*adjust run state according to build result
            activate ghapi
                return HTTP 20X
            gh -> alice : Show updated check suite\n"Failed..."

            group Also update the build log comment
                app -> ghapi : [[https://docs.github.com/en/rest/issues/comments#update-an-issue-comment Update build log comment]]
                activate ghapi
                    return HTTP 20X OK
                gh -> alice : Refresh build log comment
            end
            return HTTP 20X
        
    end
    
    deactivate master

@enduml: